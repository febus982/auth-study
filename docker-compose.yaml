version: '3.8'
services:

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml

  dev:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    environment:
      OTEL_SERVICE_NAME: "bootstrap-fastapi-dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
    ports:
      - '8000:8000'
    working_dir: "/app/src"
    volumes:
      - '.:/app'
    depends_on:
      - otel-collector
    command:
      - opentelemetry-instrument
      - uvicorn
      - http_app:create_app
      - --host
      - 0.0.0.0
      - --port
      - "8000"
      - --factory
      - --reload

  http:
    build:
      dockerfile: Dockerfile
      context: .
      target: http_app
    depends_on:
      - otel-collector
      - mailslurper
      - oathkeeper
      - kratos-selfservice-ui-node
    environment:
      OTEL_SERVICE_NAME: "bootstrap-fastapi-http"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
    ports:
      - '8001:8000'
    volumes:
      - './sqlite.db:/app/sqlite.db'



  kratos-migrate:
    image: oryd/kratos:v1.1.0
    environment:
      DSN: "sqlite:///home/ory/db.sqlite?_fk=true&mode=rwc"
    volumes:
      - ./auth/kratos:/home/ory
    command: -c /home/ory/kratos.yml migrate sql -e --yes
    restart: on-failure
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.1.0
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      DSN: "sqlite:///home/ory/db.sqlite?_fk=true&mode=rwc"
      LOG_LEVEL: "trace"
    volumes:
      - ./auth/kratos:/home/ory
    command: serve -c /home/ory/kratos.yml --dev --watch-courier
  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.0.0
    environment:
      KRATOS_PUBLIC_URL: "http://kratos:4433/"
      PORT: "4435"
      KRATOS_BROWSER_URL: "http://127.0.0.1:4455/.ory/kratos/public"
      JWKS_URL: "http://oathkeeper:4456/.well-known/jwks.json"
      SECURITY_MODE: "jwks"
    ports:
      - '4435:4435' # public
    restart: on-failure
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'

  oathkeeper:
    image: oryd/oathkeeper:v0.40
    depends_on:
      - kratos
    ports:
      - 4455:4455
      - 4456:4456
    command:
      serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    volumes:
      - ./auth/oathkeeper:/etc/config/oathkeeper




  # Starting from here there are only single-run commands, we can use `make` here
  test:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    volumes:
      - '.:/app'
    command:
      - "make"
      - "test"

  ci-test:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    command:
      - "make"
      - "ci-test"
